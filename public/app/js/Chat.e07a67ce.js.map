{"version":3,"sources":["webpack:///./src/views/Chat.vue?7524","webpack:///./src/components/TwilioChat.vue?4521","webpack:///src/components/TwilioChat.vue","webpack:///./src/components/TwilioChat.vue?2a03","webpack:///./src/components/TwilioChat.vue","webpack:///src/views/Chat.vue","webpack:///./src/views/Chat.vue?cbed","webpack:///./src/views/Chat.vue","webpack:///./src/views/ChatsList.vue?3656","webpack:///src/views/ChatsList.vue","webpack:///./src/views/ChatsList.vue?a04f","webpack:///./src/views/ChatsList.vue","webpack:///./src/views/ChatsList.vue?e0b5","webpack:///./src/assets/icons/uil_camera-plus.svg","webpack:///./src/components/TwilioChat.vue?5893","webpack:///./src/assets/icons/ep_arrow-right.svg"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","showJobDetailsMob","staticRenderFns","staticClass","getGuestAvatarUser","_v","_s","user_guest","first_name","last_name","_e","ref","on","onScrollChat","_l","message","messages","key","id","class","message_div_end","author","user","getAvatarUser","my_message","isImageChatMessage","getMessageContent","saveImage","loadFile","directives","name","rawName","value","expression","domProps","$event","type","indexOf","keyCode","sendMessage","apply","arguments","target","composing","newMessage","components","data","job_id","chat_client","channel","connected","showMessages","users_chat","auto_scroll","mounted","created","updated","computed","mapGetters","methods","mapMutations","scrollToEnd","content","user_id","connectClientWithUsername","console","fetchAccessToken","username","handler","identity","result","response","info","identityUser","members","currentMembers","member","connectMessagingClient","token","vm","Chat","channel_id","sendEmailUser","message_obj","url","fetchMessages","messageObj","updateConnectedUI","refreshToken","setNewToken","tokenResponse","document","formData","item","component","MainLayout","TwilioChat","isMobile","keypressSearchChat","chat","goChat","job_image_id","getUser","styleGuideJob","getDateCreatedChat","created_at","chats_list","chats_list_filter","date","params","event","chatsList","module","exports"],"mappings":"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","file":"js/Chat.e07a67ce.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('MainLayout',{attrs:{\"is-show-header\":!_vm.showJobDetailsMob}},[_c('twilio-chat')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chat_page\"},[_c('div',{staticClass:\"container_chat\"},[(_vm.user_guest)?_c('div',{staticClass:\"header_chat\"},[_c('div',{staticClass:\"guest_avatar\"},[(_vm.getGuestAvatarUser())?_c('img',{staticClass:\"guest_avatar\",attrs:{\"src\":_vm.getGuestAvatarUser(),\"alt\":\"\"}}):_c('img',{staticClass:\"guest_avatar\",attrs:{\"src\":require(\"@/assets/images/sbcf-default-avatar.png\"),\"alt\":\"\"}})]),_c('div',{staticClass:\"ms-3 name_title\"},[_vm._v(_vm._s(_vm.user_guest.first_name)+\" \"+_vm._s(_vm.user_guest.last_name))])]):_vm._e(),_c('div',{ref:\"messagesContainer\",staticClass:\"message-box\",on:{\"scroll\":_vm.onScrollChat}},_vm._l((_vm.messages),function(message){return (_vm.messages.length)?_c('div',{key:message.id,staticClass:\"message_div\",class:{message_div_end:message.author==_vm.user.id}},[(message.author!=_vm.user.id)?_c('div',{staticClass:\"box_avatar\"},[(_vm.getAvatarUser(message.author))?_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.getAvatarUser(message.author),\"alt\":\"\"}}):_c('img',{staticClass:\"avatar\",attrs:{\"src\":require(\"@/assets/images/sbcf-default-avatar.png\"),\"alt\":\"\"}})]):_vm._e(),_c('div',{staticClass:\"message_item\",class:{my_message:message.author==_vm.user.id}},[(_vm.isImageChatMessage(message))?[(_vm.getMessageContent(message))?_c('img',{staticClass:\"chat_image cp\",attrs:{\"src\":_vm.getMessageContent(message),\"preview\":\"0\",\"preview-text\":\"\",\"alt\":\"chat image\"}}):_vm._e()]:[_c('div',{},[_vm._v(_vm._s(_vm.getMessageContent(message)))])]],2)]):_vm._e()}),0),_c('div',{staticClass:\"input_box_s\"},[_c('input',{attrs:{\"type\":\"file\",\"id\":\"upload-file\",\"accept\":\"image/jpeg, image/gif, image/png\"},on:{\"change\":_vm.saveImage}}),_c('img',{staticClass:\"img_m chat\",attrs:{\"src\":require(\"@/assets/icons/uil_camera-plus.svg\")},on:{\"click\":_vm.loadFile}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newMessage),expression:\"newMessage\"}],staticClass:\"input_send_m\",attrs:{\"type\":\"text\",\"placeholder\":\"Type...\"},domProps:{\"value\":(_vm.newMessage)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==13){ return null; }return _vm.sendMessage.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.newMessage=$event.target.value}}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"chat_page\">\n        <div class=\"container_chat\">\n            <div class=\"header_chat\" v-if=\"user_guest\">\n                <div class=\"guest_avatar\">\n                    <img v-if=\"getGuestAvatarUser()\" class=\"guest_avatar\" :src=\"getGuestAvatarUser()\" alt=\"\">\n                    <img v-else class=\"guest_avatar\" src='@/assets/images/sbcf-default-avatar.png' alt=\"\">\n                </div>\n                <div class=\"ms-3 name_title\">{{ user_guest.first_name }} {{ user_guest.last_name }}</div>\n            </div>\n            <div ref=\"messagesContainer\" @scroll=\"onScrollChat\" class=\"message-box\">\n                <div v-if=\"messages.length\" v-for=\"message in messages\" :key=\"message.id\"\n                     :class=\"{message_div_end:message.author==user.id}\" class=\"message_div\">\n                    <div class=\"box_avatar\" v-if=\"message.author!=user.id\">\n                        <img v-if=\"getAvatarUser(message.author)\" class=\"avatar\" :src=getAvatarUser(message.author)\n                             alt=\"\">\n                        <img v-else class=\"avatar\" src='@/assets/images/sbcf-default-avatar.png' alt=\"\">\n                    </div>\n                    <div class=\"message_item\" :class=\"{my_message:message.author==user.id}\">\n                        <template v-if=\"isImageChatMessage(message)\">\n                            <img v-if=\"getMessageContent(message)\" :src=\"getMessageContent(message)\"\n                                 class=\"chat_image cp\"\n                                 preview=0 preview-text=\"\"\n                                 alt=\"chat image\">\n                        </template>\n                        <template v-else>\n                            <div class=\"\">{{ getMessageContent(message) }}</div>\n                        </template>\n                    </div>\n                </div>\n            </div>\n            <div class=\"input_box_s\">\n                <input type=\"file\"\n                       id=\"upload-file\"\n                       @change=\"saveImage\"\n                       accept=\"image/jpeg, image/gif, image/png\"/>\n\n                <img src=\"@/assets/icons/uil_camera-plus.svg\" class=\"img_m chat\" @click=\"loadFile\"/>\n\n                <input class=\"input_send_m\" type=\"text\" v-model=\"newMessage\"\n                       v-on:keyup.13=\"sendMessage\" placeholder=\"Type...\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters, mapMutations} from \"vuex\";\nimport {errorMessage} from \"../services/messages\";\n\nconst Chat = require('twilio-chat');\n\nexport default {\n    name: \"TwilioChat\",\n    components: {},\n    data() {\n        return {\n            job_id: this.$route.params.id,\n            user: {},\n            chat_client: null,\n            channel: null,\n            connected: false,\n            messages: [],\n            newMessage: '',\n            showMessages: false,\n            users_chat: [],\n            user_guest: {},\n            auto_scroll: true,\n        };\n    },\n    async mounted() {\n        this.user = JSON.parse(localStorage.getItem('strobeart_user')) || {}\n        this.connectClientWithUsername();\n    },\n    created() {\n        this.$previewRefresh()\n    },\n    updated() {\n        this.$previewRefresh()\n        this.scrollToEnd();\n    },\n    computed: {\n        ...mapGetters([\n            'getUser'\n        ]),\n    },\n    methods: {\n        ...mapMutations([\n            'showLoader',\n            'hideLoader',\n        ]),\n        onScrollChat() {\n            let content = this.$refs.messagesContainer;\n            if ((content.scrollHeight - Math.abs(content.scrollTop)) === content.clientHeight) {\n                this.auto_scroll = true;\n            } else {\n                this.auto_scroll = false;\n            }\n        },\n        scrollToEnd: function () {\n            let content = this.$refs.messagesContainer;\n            if (this.auto_scroll) {\n                content.scrollTop = content.scrollHeight\n            }\n        },\n\n        getGuestAvatarUser() {\n            return this.user_guest?.avatar?.url || null\n        },\n        getAvatarUser(user_id) {\n            return this.users_chat[user_id]?.avatar?.url || null\n        },\n        connectClientWithUsername() {\n            if (this.user?.id) {\n                this.fetchAccessToken(this.user?.id, this.connectMessagingClient);\n            } else {\n                console.log('Error User')\n            }\n        },\n        async fetchAccessToken(username, handler) {\n            this.showLoader()\n            try {\n                const result = await this.$http.postAuth(`${this.$http.apiUrl()}access_token`, {\n                    identity: this.user?.id,\n                });\n                const response = await this.$http.postAuth(`${this.$http.apiUrl()}chat`, {\n                    job_id: this.job_id\n                });\n                if (response?.data?.data) {\n                    let info = response.data.data;\n                    info.forEach((element) => {\n                        this.users_chat[element.id] = element;\n                        if (element.id != this.user.id) {\n                            this.user_guest = element\n                        }\n                    });\n                }\n                this.hideLoader()\n                handler(result?.data?.data);\n            } catch (e) {\n                console.log(error);\n            }\n            this.hideLoader()\n        },\n        async identityUser() {\n            const members = this.channel.getMembers();\n            members.then((currentMembers) => {\n                currentMembers.forEach(member => {\n                    if (member.identity == this.user.id) {\n                        this.channel.setAllMessagesConsumed()\n                    }\n                });\n            });\n        },\n        async connectMessagingClient(token) {\n            // Initialize the Chat messaging client\n            let vm = this;\n            this.chat_client = await Chat.Client.create(token);\n            this.chat_client.on(\"tokenAboutToExpire\", async () => {\n                vm.refreshToken()\n            });\n            vm.updateConnectedUI();\n            try {\n                let channel_id = 'channel-' + this.job_id;\n                this.channel = await this.chat_client.getChannelByUniqueName(channel_id);\n                this.channel.on(\"messageAdded\", message => {\n                    this.messages.push(message);\n                    this.identityUser()\n                });\n                await this.identityUser()\n                this.channel.getUnconsumedMessagesCount().then((result) => {\n                    console.log('res', result);\n                });\n                // console.log(this.channel.setAllMessagesConsumed());\n                console.log(this.channel.lastConsumedMessageIndex);\n                await this.fetchMessages()\n            } catch (e) {\n                console.log('await this.chat_client.getChannelByUniqueName(name); ERR:', e);\n            }\n        },\n        async sendEmailUser() {\n            this.showLoader();\n            try {\n                await this.$http.postAuth(`${this.$http.apiUrl()}send-email`, {\n                    'email': this.user_guest?.email || '',\n                    'text': this.newMessage,\n                    'link': this.$route.path\n                });\n            } catch (e) {\n            }\n            this.hideLoader();\n        },\n        async sendMessage() {\n            if (!this.newMessage) {\n                return\n            }\n            const message_obj = {\n                message: this.newMessage,\n                url: null\n            };\n            this.channel.sendMessage(JSON.stringify(message_obj));\n            await this.sendEmailUser();\n            this.newMessage = \"\";\n        },\n        async fetchMessages() {\n            try {\n                const messageObj = await this.channel.getMessages();\n                this.messages = messageObj.items;\n            } catch (e) {\n                console.error('await this.channel.getMessages() ERROR:', e);\n            }\n        },\n        updateConnectedUI() {\n            this.connected = true;\n        },\n        refreshToken() {\n            this.fetchAccessToken(this.user?.id, this.setNewToken);\n        },\n        setNewToken(tokenResponse) {\n            this.chat_client.updateToken(tokenResponse.token);\n        },\n        isImageChatMessage(message) {\n            try {\n                const messageBodyObj = JSON.parse(message.body);\n                return !!(messageBodyObj && messageBodyObj.url);\n            } catch (e) {\n                return false;\n            }\n        },\n        loadFile() {\n            document.getElementById('upload-file').click();\n        },\n        async saveImage() {\n            const formData = new FormData();\n            formData.append('image', document.getElementById('upload-file').files[0]);\n            formData.append('job_id', this.job_id);\n            this.showLoader()\n            try {\n                const {data} = await this.$http.postAuth(\n                    `${this.$http.apiUrl()}chat/image`,\n                    formData,\n                    this.$http.formDataHeader()\n                );\n                if (data?.data?.image?.url || null) {\n                    const messageObj = {\n                        message: null,\n                        url: data.data.image.url\n                    }\n                    this.channel.sendMessage(JSON.stringify(messageObj));\n                }\n            } catch (e) {\n                console.log('saveImage ERR:', e);\n            }\n            this.hideLoader()\n        },\n        getMessageContent(item) {\n            try {\n                const is_media = this.isImageChatMessage(item);\n                const obj = JSON.parse(item.body);\n                return !is_media ? obj['message'] : obj['url'];\n            } catch (e) {\n                return item.body;\n            }\n        },\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.media-body {\n\n}\n\n#upload-file {\n    display: none;\n}\n\n.input_box_s {\n    display: flex;\n    gap: 10px;\n}\n\n.box_avatar .avatar {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    border: 0.3px solid #494949;\n    box-sizing: border-box;\n    margin-bottom: 6px;\n}\n\n.message_item {\n    margin: 0 10px;\n    background: rgba(216, 195, 175, 0.45);\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.25);\n    border-radius: 0px 10px 10px 10px;\n    padding: 10px 25px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 13px;\n    line-height: 18px;\n    color: #000000;\n    display: inline-block;\n}\n\n.message_div_end {\n    text-align: end;\n}\n\n.my_message {\n    text-align: end;\n    background: #F4F2F2;\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.25);\n    border-radius: 0px 10px 10px 10px;\n}\n\n.message_div {\n    padding: 20px 0;\n}\n\n.input_send_m {\n    background: #FFFFFF;\n    border: 0.3px solid #494949;\n    box-sizing: border-box;\n    border-radius: 100px;\n    height: 35px;\n    width: 100%;\n    padding: 18px;\n}\n\n.input_send_m::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 13px;\n    line-height: 18px;\n    color: rgba(0, 0, 0, 0.35);\n}\n\n.chat_image {\n    width: 100%;\n    height: auto;\n}\n\n.chat_page {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding: 50px 30px 120px 30px;\n}\n\n.container_chat {\n    width: 50%;\n}\n\n.message-box {\n    overflow-y: scroll;\n    height: 300px\n    //height: calc(100vh - 400px);\n}\n\n.guest_avatar {\n    border-radius: 50%;\n    width: 45px;\n    height: 45px;\n}\n\n.header_chat {\n    padding: 30px 15px;\n    display: flex;\n    border-bottom: 0.5px solid #494949;\n    margin-bottom: 50px;\n}\n\n.name_title {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 22px;\n    color: #494949;\n    display: flex;\n    align-items: end;\n}\n\n@media only screen and (max-width: 992px) {\n    .input_box_s {\n        position: fixed;\n        width: 84%;\n        bottom: 99px;\n        z-index: 9999;\n        background: #f4f2f2;\n    }\n    .container_chat {\n        width: 100%;\n    }\n    .message-box {\n        overflow-x: hidden;\n        height: calc(100vh - 363px);\n    }\n    .chat_page {\n        padding: 20px 30px 0px 30px;\n    }\n\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TwilioChat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TwilioChat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TwilioChat.vue?vue&type=template&id=a67ef810&scoped=true&\"\nimport script from \"./TwilioChat.vue?vue&type=script&lang=js&\"\nexport * from \"./TwilioChat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TwilioChat.vue?vue&type=style&index=0&id=a67ef810&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a67ef810\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <MainLayout :is-show-header=!showJobDetailsMob >\n          <twilio-chat></twilio-chat>\n        </MainLayout>\n</template>\n\n<script>\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport {errorMessage} from \"../services/messages\";\nimport {mapMutations} from \"vuex\";\nimport TwilioChat from \"../components/TwilioChat\";\n\nexport default {\n    name: 'Chat',\n    components: {\n        MainLayout,\n        TwilioChat\n    },\n    data() {\n        return {\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        ...mapMutations([\n            'showLoader',\n            'hideLoader',\n        ]),\n        isMobile() {\n            return window.innerWidth <= 992;\n        },\n    },\n    computed: {\n        showJobDetailsMob() {\n            return this.isMobile()\n        },\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chat.vue?vue&type=template&id=a5366bce&scoped=true&\"\nimport script from \"./Chat.vue?vue&type=script&lang=js&\"\nexport * from \"./Chat.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a5366bce\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('MainLayout',{attrs:{\"is-show-header\":!_vm.showJobDetailsMob}},[_c('div',{staticClass:\"page_list_channels\"},[_c('div',{staticClass:\"items_chat\"},[_c('div',{staticClass:\"title_page mb-3\"},[_vm._v(\"Messages\")]),_c('div',{staticClass:\"box_search_i\"},[_c('input',{staticClass:\"search_chat_inp\",attrs:{\"type\":\"text\",\"placeholder\":\"\"},on:{\"keyup\":_vm.keypressSearchChat}}),_c('img',{staticClass:\"search_icon\",attrs:{\"src\":require(\"@/assets/icons/search.svg\"),\"alt\":\"\"}})]),_vm._l((_vm.chats_list_filter),function(chat){return _c('div',{staticClass:\"channel_item\",on:{\"click\":function($event){return _vm.goChat(chat.job_image_id)}}},[_c('div',{staticClass:\"chat_item\"},[_c('div',{staticClass:\"box_avatar\"},[(_vm.getAvatarUser(chat))?_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.getAvatarUser(chat),\"alt\":\"\"}}):_c('img',{staticClass:\"avatar\",attrs:{\"src\":require(\"@/assets/images/sbcf-default-avatar.png\"),\"alt\":\"\"}})]),_c('div',{staticClass:\"ps-3\"},[_c('div',{staticClass:\" user_title\"},[_vm._v(\" \"+_vm._s(_vm.getUser(chat).first_name)+\" \"+_vm._s(_vm.getUser(chat).last_name)+\" \"),_c('div',{staticClass:\"job_t\"},[_vm._v(_vm._s(_vm.styleGuideJob(chat)))])])])]),_c('div',{staticClass:\"date_box\"},[_c('div',[_vm._v(_vm._s(_vm.getDateCreatedChat(chat.created_at)))])]),_c('div',{staticClass:\"icon_a\"},[_c('img',{attrs:{\"src\":require(\"@/assets/icons/ep_arrow-right.svg\"),\"alt\":\"\"}})])])})],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <MainLayout :is-show-header=!showJobDetailsMob >\n        <div class=\"page_list_channels\">\n            <div class=\"items_chat\">\n                <div class=\"title_page mb-3\">Messages</div>\n                <div class=\"box_search_i\">\n                    <input @keyup=\"keypressSearchChat\" type=\"text\" class=\"search_chat_inp\"\n                           placeholder=\"\">\n                    <img class=\"search_icon\" src=\"@/assets/icons/search.svg\" alt=\"\">\n                </div>\n            <div v-for=\"chat in chats_list_filter\" @click=\"goChat(chat.job_image_id)\" class=\"channel_item\">\n                <div class=\"chat_item\">\n                    <div class=\"box_avatar\">\n                        <img v-if=\"getAvatarUser(chat)\" class=\"avatar\" :src=getAvatarUser(chat) alt=\"\">\n                        <img v-else class=\"avatar\" src='@/assets/images/sbcf-default-avatar.png' alt=\"\">\n                    </div>\n                    <div class=\"ps-3\">\n                        <div class=\" user_title\">\n                            {{getUser(chat).first_name}}   {{getUser(chat).last_name}}\n                            <div class=\"job_t\">{{styleGuideJob(chat)}}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"date_box\">\n                    <div>{{getDateCreatedChat(chat.created_at)}}</div>\n                </div>\n                <div class=\"icon_a\">\n                    <img  src='@/assets/icons/ep_arrow-right.svg' alt=\"\">\n                </div>\n            </div>\n            </div>\n        </div>\n    </MainLayout>\n</template>\n\n<script>\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport {errorMessage} from \"../services/messages\";\nimport moment from 'moment-timezone'\nimport {mapMutations} from \"vuex\";\nconst Chat = require('twilio-chat');\n\nexport default {\n    name: 'ChatsList',\n    components: {\n        MainLayout,\n    },\n    data() {\n        return {\n            user: {},\n            chats_list:{},\n            chats_list_filter:{}\n        }\n    },\n    mounted() {\n        this.user = JSON.parse(localStorage.getItem('strobeart_user')) || {}\n        this.chatsList();\n    },\n    methods: {\n        ...mapMutations([\n            'showLoader',\n            'hideLoader',\n        ]),\n        getDateCreatedChat(date) {\n            return moment(date).format('MM/DD/yyyy')\n        },\n        styleGuideJob(chat){\n            return chat?.job_image?.style_guide||''\n        },\n        isMobile() {\n            return window.innerWidth <= 992;\n        },\n        goChat(job_id){\n            this.$router.push({name: 'Chat',params:{id:job_id}}).then();\n        },\n        getAvatarUser(chat){\n            if (this.user?.type_user=='business'){\n                return chat?.user_editor?.avatar?.url||null\n            }else {\n                return chat?.user_business?.avatar?.url||null\n            }\n        },\n        getUser(chat){\n            if (this.user?.type_user=='business'){\n                return chat?.user_editor||{}\n            }else {\n                return chat?.user_business||{}\n            }\n        },\n        keypressSearchChat(event){\n            let search_text = (event.target.value).toUpperCase()\n            if (search_text && search_text.length > 1) {\n                if (this.user?.type_user=='business'){\n                    this.chats_list_filter = this.chats_list.filter(chat => (chat.user_editor.name).toUpperCase().includes(search_text));\n                }else {\n                    this.chats_list_filter = this.chats_list.filter(chat => (chat.user_business.name).toUpperCase().includes(search_text));\n                }\n            } else {\n                this.chats_list_filter = this.chats_list\n            }\n        },\n        async chatsList() {\n            this.showLoader()\n            try {\n                const result = await this.$http.getAuth(`${this.$http.apiUrl()}chats-list`);\n                this.chats_list = result?.data?.data\n                this.chats_list_filter= result?.data?.data\n            } catch (e) {\n                console.log(error);\n            }\n            this.hideLoader()\n        },\n    },\n    computed: {\n        showJobDetailsMob() {\n            return this.isMobile()\n        },\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n.page_list_channels{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding: 30px 15px 120px 15px;\n}\n.box_avatar .avatar {\n    width: 45px;\n    height: 45px;\n    border-radius: 50%;\n    border: 0.3px solid #494949;\n    box-sizing: border-box;\n    margin-bottom: 6px;\n    object-fit: cover;\n}\n.channel_item{\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 0.5px solid #494949;\n    padding: 21px 10px;\n    cursor: pointer;\n}\n.items_chat{\n    width: 50%;\n}\n.user_title{\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    color: #494949;\n}\n.icon_a{\n    display: flex;\n    align-items: center;\n}\n.date_channel{\n    font-style: normal;\n    font-weight: 400;\n    font-size: 13px;\n    line-height: 18px;\n    color: #494949;\n}\n.chat_item{\n    display: flex;\n    width: 100%;\n}\n.date_box{\n    padding-right: 30px;\n    display: flex;\n    align-items: end;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 13px;\n    line-height: 18px;\n    color: #494949;\n}\n.job_t{\n    display: flex;\n    padding-top: 5px;\n    justify-content: center;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 13px;\n    line-height: 18px;\n    color: #494949;\n}\n.box_search_i {\n    position: relative;\n}\n.search_chat_inp {\n    background: #FFFFFF;\n    border: 0.3px solid #494949;\n    box-sizing: border-box;\n    border-radius: 100px;\n    height: 41px;\n    width: 100%;\n    padding-left: 45px;\n}\n.search_icon {\n    position: absolute;\n    left: 16px;\n    top: 14px;\n    cursor: pointer;\n}\n.title_page{\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 22px;\n    color: #494949;\n}\n@media only screen and (max-width: 992px) {\n    .items_chat{\n        width: 100%;\n    }\n    .page_list_channels {\n        padding: 70px 15px 120px 15px;\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatsList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatsList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatsList.vue?vue&type=template&id=57cee44e&scoped=true&\"\nimport script from \"./ChatsList.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatsList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChatsList.vue?vue&type=style&index=0&id=57cee44e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57cee44e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatsList.vue?vue&type=style&index=0&id=57cee44e&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/uil_camera-plus.944439f8.svg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TwilioChat.vue?vue&type=style&index=0&id=a67ef810&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/ep_arrow-right.d3a55d18.svg\";"],"sourceRoot":""}